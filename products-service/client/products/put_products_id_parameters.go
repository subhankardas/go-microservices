// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/subhankardas/go-microservices/products-service/models"
)

// NewPutProductsIDParams creates a new PutProductsIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutProductsIDParams() *PutProductsIDParams {
	return &PutProductsIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutProductsIDParamsWithTimeout creates a new PutProductsIDParams object
// with the ability to set a timeout on a request.
func NewPutProductsIDParamsWithTimeout(timeout time.Duration) *PutProductsIDParams {
	return &PutProductsIDParams{
		timeout: timeout,
	}
}

// NewPutProductsIDParamsWithContext creates a new PutProductsIDParams object
// with the ability to set a context for a request.
func NewPutProductsIDParamsWithContext(ctx context.Context) *PutProductsIDParams {
	return &PutProductsIDParams{
		Context: ctx,
	}
}

// NewPutProductsIDParamsWithHTTPClient creates a new PutProductsIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutProductsIDParamsWithHTTPClient(client *http.Client) *PutProductsIDParams {
	return &PutProductsIDParams{
		HTTPClient: client,
	}
}

/*
PutProductsIDParams contains all the parameters to send to the API endpoint

	for the put products ID operation.

	Typically these are written to a http.Request.
*/
type PutProductsIDParams struct {

	/* ID.

	   Product ID
	*/
	ID int64

	/* Product.

	   Product Details
	*/
	Product *models.DataProduct

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put products ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutProductsIDParams) WithDefaults() *PutProductsIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put products ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutProductsIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put products ID params
func (o *PutProductsIDParams) WithTimeout(timeout time.Duration) *PutProductsIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put products ID params
func (o *PutProductsIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put products ID params
func (o *PutProductsIDParams) WithContext(ctx context.Context) *PutProductsIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put products ID params
func (o *PutProductsIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put products ID params
func (o *PutProductsIDParams) WithHTTPClient(client *http.Client) *PutProductsIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put products ID params
func (o *PutProductsIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the put products ID params
func (o *PutProductsIDParams) WithID(id int64) *PutProductsIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the put products ID params
func (o *PutProductsIDParams) SetID(id int64) {
	o.ID = id
}

// WithProduct adds the product to the put products ID params
func (o *PutProductsIDParams) WithProduct(product *models.DataProduct) *PutProductsIDParams {
	o.SetProduct(product)
	return o
}

// SetProduct adds the product to the put products ID params
func (o *PutProductsIDParams) SetProduct(product *models.DataProduct) {
	o.Product = product
}

// WriteToRequest writes these params to a swagger request
func (o *PutProductsIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}
	if o.Product != nil {
		if err := r.SetBodyParam(o.Product); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
